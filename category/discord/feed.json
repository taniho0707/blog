{
    "version": "https://jsonfeed.org/version/1",
    "title": "taniho's blog • All posts by \"discord\" category",
    "description": "technical note",
    "home_page_url": "http://blog.taniho.net",
    "items": [
        {
            "id": "http://blog.taniho.net/2017/12/TAC-09-Discord-bot%E8%A3%BD%E4%BD%9C%E8%A8%98/",
            "url": "http://blog.taniho.net/2017/12/TAC-09-Discord-bot%E8%A3%BD%E4%BD%9C%E8%A8%98/",
            "title": "[TAC:09] Discord bot製作記",
            "date_published": "2017-12-08T16:31:00.000Z",
            "content_html": "<h1 id=\"はじめに\"><a href=\"#はじめに\" class=\"headerlink\" title=\"はじめに\"></a>はじめに</h1><p>この記事は<a href=\"https://qiita.com/advent-calendar/2017/discord\">Discord Advent Calendar 2017</a>および<a href=\"http://blog.taniho.net/categories/TAC2017/\">taniho Advent Calendar 2017</a>の9日目の記事です．</p>\n<p>今日はWebアプリを作り，Discordのbotと連携させた話をします．</p>\n<p>突然ですが皆さん，「<a href=\"https://omocoro.jp/kiji/108660/\">【ラノベ】売れるライトノベルのタイトルを単語シャッフルで作ってみた</a>」という記事はご存知ですか？<br>実にあほらしい記事ですが，ある日僕の友人が言い出しました．</p>\n<p>友人H「単語を登録して，ランダムに3つ表示するソフトを作れば楽しいかもなあ」</p>\n<p>……作ることにしました．</p>\n<a id=\"more\"></a>\n\n<h1 id=\"Webアプリにする\"><a href=\"#Webアプリにする\" class=\"headerlink\" title=\"Webアプリにする\"></a>Webアプリにする</h1><p>当初，僕達はSkypeで会話をしていたので，Webブラウザを通して遊ぶことができるシステムを考えました．<br>サーバーサイドはPerlで実装し，単語追加・単語削除・単語リスト取得のAPIを用意しました．<br>クライアントから，単語追加と削除の場合はPOST，リスト取得の場合はGETメソッドを送ってサーバーとやりとりをします．</p>\n<p>これが遊べるページです(適当に書いたコードなので公開はしていません)．</p>\n<img src=\"/2017/12/TAC-09-Discord-bot%E8%A3%BD%E4%BD%9C%E8%A8%98/1.png\" width=\"500\" />\n\n<p>「！！！！！」ボタンをクリックするとランダムに4つの単語を表示します．</p>\n<img src=\"/2017/12/TAC-09-Discord-bot%E8%A3%BD%E4%BD%9C%E8%A8%98/2.png\" width=\"500\" />\n\n<p>ダウンロードボタンをクリックすると，Canvasを使って生成した画像をダウンロードできます．</p>\n<img src=\"/2017/12/TAC-09-Discord-bot%E8%A3%BD%E4%BD%9C%E8%A8%98/omocoro.png\" width=\"350\" />\n\n<p>ここまでは良かったのですが，新しい欲が出てきました．</p>\n<p>「シャッフルして出た単語リストをいちいちみんなに見せるのが面倒」</p>\n<p>そうなのです，自分が思いついた「ラノベのタイトル」を友達に発表するには，このWebアプリからダウンロードした画像をわざわざアップロードする必要があります．<br>そこで，Discordのチャンネルを使うことにしました．タイミングよくSkypeからDiscordに乗り換えたので，ついでにbotを作ることにしました．</p>\n<p>サーバーサイドに変更はなく，bot用のサーバーアプリを書くことにします．</p>\n<h1 id=\"Discord-botを作る\"><a href=\"#Discord-botを作る\" class=\"headerlink\" title=\"Discord botを作る\"></a>Discord botを作る</h1><p>Node.jsで作ることにしました．</p>\n<p><a href=\"https://abal.moe/Eris/\">Eris A Node.JS Discord Library</a></p>\n<p>Node.jsのライブラリであるErisを使えば，ほんの数行で返事を返すだけのbotが作れます．</p>\n<p>ヘルプのテキストを用意して，</p>\n<p><img src=\"help.png\" alt=\"元ネタをちゃんと明記したヘルプ\"></p>\n<p>あとはこの通りのコマンドを実装するだけです．<br>実装自体もWeb版とほぼ同じようなコードで済むので，非常に楽でした．</p>\n<p>遊んでいる様子がこちら．</p>\n<p><img src=\"3.png\" alt=\"omocoro bot in Discord\"></p>\n<h1 id=\"botを起動時に立ち上げる\"><a href=\"#botを起動時に立ち上げる\" class=\"headerlink\" title=\"botを起動時に立ち上げる\"></a>botを起動時に立ち上げる</h1><p>サーバーを再起動した時にbotが立ち上がるように設定します．<br>使っているサーバーはUbuntu 16.04なのでシステムサービスはsystemctlです．</p>\n<p><code>/etc/systemd/system</code>以下に<code>omocorobot.service</code>なるファイルを作り，次のような感じで作っておきます．</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=omocoro discord bot</span><br><span class=\"line\">After=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">ExecStart=/usr/bin/node /dir-to-js-file/omocorobot.js</span><br><span class=\"line\">WorkingDirectory=/dir-to-js-file/</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\">User=omorocobot</span><br><span class=\"line\">Group=omocorobot</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"まとめ\"><a href=\"#まとめ\" class=\"headerlink\" title=\"まとめ\"></a>まとめ</h1><p>Webアプリが作れる人なら，Discord botは楽々作れることが分かりました．</p>\n<p>明日の<a href=\"http://blog.taniho.net/categories/TAC2017/\">taniho Advent Calendar 2017</a>は技術的な話から離れて，日常の話をしようと思います．</p>\n",
            "tags": [
                "Discord",
                "Webアプリ"
            ]
        }
    ]
}