{
    "version": "https://jsonfeed.org/version/1",
    "title": "taniho's blog • All posts by \"qt\" category",
    "description": "technical note",
    "home_page_url": "http://blog.taniho.net",
    "items": [
        {
            "id": "http://blog.taniho.net/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/",
            "url": "http://blog.taniho.net/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/",
            "title": "[TAC:08] yakudo camera製作記",
            "date_published": "2017-12-07T15:00:00.000Z",
            "content_html": "<h1 id=\"はじめに\"><a href=\"#はじめに\" class=\"headerlink\" title=\"はじめに\"></a>はじめに</h1><p>この記事は<a href=\"https://qiita.com/advent-calendar/2017/kuso-app2017\">クソアプリ Advent Calendar 2017</a>，および<a href=\"http://blog.taniho.net/categories/TAC2017/\">taniho Advent Calendar 2017</a>の8日目の記事です．</p>\n<p>今日はクソみたいなAndroidアプリ，”yakudo camera”を作ったお話をします．一応<a href=\"http://blog.taniho.net/2017/12/TAC-07-Qt-for-Android%E3%81%A7%E5%BA%83%E5%91%8A%E3%82%92%E6%8E%B2%E8%BC%89%E3%81%99%E3%82%8B/\">前回</a>からの続きで，前回の記事ではアプリに広告を貼った話，今回が作ったアプリの話になります．</p>\n<p>まあ，クソみたいな話なので読まなくていいと思います．</p>\n<a id=\"more\"></a>\n\n<h1 id=\"yakudoとは\"><a href=\"#yakudoとは\" class=\"headerlink\" title=\"yakudoとは\"></a>yakudoとは</h1><p>※僕とは何の関係もないサークルが発祥です</p>\n<p><a href=\"https://trap.jp/post/314/\">あなたの知らない躍動の世界 | 東京工業大学デジタル創作同好会traP</a></p>\n<p>traPとは全く別のサークルから，twitter経由でyakudoを知りました．今では僕のサークルでも大流行しています．</p>\n<p>yakudoとは，バカらしくも意外と奥が深く，綺麗な躍動写真を撮影するには練習が必要です．<br>……ハードルが高いですよね？</p>\n<p>カメラをかざしてシャッターを押すだけで躍動写真が撮影できるアプリ，作りました．<br>(traPの方々には何の連絡もせず作ってしまいました．問題がありそうならお知らせください)</p>\n<h1 id=\"躍動感を出す\"><a href=\"#躍動感を出す\" class=\"headerlink\" title=\"躍動感を出す\"></a>躍動感を出す</h1><h2 id=\"躍動感とは\"><a href=\"#躍動感とは\" class=\"headerlink\" title=\"躍動感とは\"></a>躍動感とは</h2><p>そもそも躍動感って何なのでしょうか？</p>\n<blockquote>\n<p>躍動感 読み方：やくどうかん<br>生き生きとしていて動きがよく分かるような様子や雰囲気のこと<br><a href=\"https://www.weblio.jp/content/%E8%BA%8D%E5%8B%95%E6%84%9F\">躍動感とは - 日本語表現辞典 Weblio辞書</a></p>\n</blockquote>\n<p>撮影する対象が，生き生きしているような動きが付く撮影のことだと解釈しましょう．<br>最も一般的な躍動写真は，被写体に向かってカメラを押しながら/引きながら撮影をすることで躍動感を出しています．撮影した写真の被写体は動かず背景がブレるため，「被写体が生き生きと動いている」ように見えるわけですね．<br>これは僕が撮影した躍動写真です．</p>\n<p><img src=\"yakudo1.jpg\" alt=\"ごきぶり\"></p>\n<p><img src=\"yakudo2.jpg\" alt=\"金麦\"></p>\n<p><img src=\"yakudo3.jpg\" alt=\"ゆるゆり\"></p>\n<p>いい感じの躍動感が付いています．</p>\n<h2 id=\"躍動感を付けてみる\"><a href=\"#躍動感を付けてみる\" class=\"headerlink\" title=\"躍動感を付けてみる\"></a>躍動感を付けてみる</h2><p>今回はQtでアプリを作りました．Qtには<a href=\"http://doc.qt.io/qt-5/qimage.html\">QImage</a>というクラスがあり，画素単位のアクセスが出来ます．撮影した画像を取り込んで，思いついたアルゴリズムを試してみましょう．</p>\n<h2 id=\"安直に\"><a href=\"#安直に\" class=\"headerlink\" title=\"安直に\"></a>安直に</h2><p>撮影中にカメラを動かすということは，写真の画素同士を混ぜれば良さそうです．RGB値のそれぞれの平均を取ってみましょう．次のように加工します．</p>\n<p><img src=\"1.png\" alt=\"安直かつ確実な方法\"></p>\n<p>加工済みの写真がこちら．</p>\n<img src=\"/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/old1.jpg\" width=\"400\" />\n\n<img src=\"/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/old2.jpg\" width=\"400\" />\n\n<img src=\"/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/old3.jpg\" width=\"400\" />\n\n<p>いやまあかんたんにきれいになりましたねえ！！</p>\n<p>と言いたいところなのですが，画像処理にクッソ時間がかかってしまいました．1枚あたり1分程度です．というわけで，ここからは画像処理高速化の苦労を順に見ていきます．</p>\n<h2 id=\"LPFを考える\"><a href=\"#LPFを考える\" class=\"headerlink\" title=\"LPFを考える\"></a>LPFを考える</h2><p>躍動感を付けるために画像をぼかす処理をしたのですが，先程のは計算時間がかかりすぎました．ということで，同じLPFでも計算時間がかからないような式に変えてみます．</p>\n<p><img src=\"2.png\" alt=\"隣しか見ない\"></p>\n<p>式は次のURLなどを参考にしています．</p>\n<p><a href=\"http://android.ohwada.jp/archives/334\">加速度センサ と ローパスフィルタ (波形) | アンドロイドな日々</a></p>\n<p>コレにより計算時間がわずか数秒にまで短くなりました！！</p>\n<p>んですが今度は加工した画像がえらいことになりました．</p>\n<img src=\"/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/bad1.jpg\" width=\"400\" />\n\n<p>隣の画素1個しか見ないので，どうしても滑らかになってくれないんですよね．<br>これが解決策です．</p>\n<p><img src=\"3.png\" alt=\"周りをよく見る\"></p>\n<p>このようにすることで，僅かな計算時間で程々の躍動感を付けることが出来ました．<br>ただし，ここままでは中心点からまっすぐ45°方向に汚い線が入ってしまいます．</p>\n<img src=\"/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/bad2.jpg\" width=\"400\" />\n\n<p>その場合は斜め方向の画素でなく，隣の画素も見てあげるようにすれば，…</p>\n<p><img src=\"new1.jpg\" alt=\"かわいい\"></p>\n<p>きれいになりました．</p>\n<p>あ，次の画像はバグ画像です．</p>\n<img src=\"/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/bad3.jpg\" width=\"400\" />\n\n<img src=\"/2017/12/TAC-08-yakudo-camera%E8%A3%BD%E4%BD%9C%E8%A8%98/bad4.jpg\" width=\"400\" />\n\n<p>↑パラメータを間違えると最後の画像のようになっちゃいました</p>\n<h1 id=\"完成形\"><a href=\"#完成形\" class=\"headerlink\" title=\"完成形\"></a>完成形</h1><p>というわけで，とりあえずアプリで加工ができるようになりました．<br>一応，公開しているアプリの特徴を紹介しておきます．</p>\n<ol>\n<li><p>躍動中心を設定可能<br>アプリを起動してもらえればわかります．<br>画面をタップすることで，躍動感を与える場所を変更することが出来ます．<br>ちょっとバグが潜んでるかもしれません．</p>\n</li>\n<li><p>躍動レベルを調整可能<br>躍動する強さを変えられるようにしました．  </p>\n<p><img src=\"camera00.jpg\" alt=\"躍動レベル0\"><br><img src=\"camera02.jpg\" alt=\"躍動レベル0.2\"><br><img src=\"camera04.jpg\" alt=\"躍動レベル0.4\"><br><img src=\"camera05.jpg\" alt=\"躍動レベル0.5\"></p>\n</li>\n</ol>\n<h1 id=\"まとめ\"><a href=\"#まとめ\" class=\"headerlink\" title=\"まとめ\"></a>まとめ</h1><p>お手軽に躍動感を付けられました．現在アプリは下のURLで公開中です．<br>手元のZenFoneでは動いていますが，Xperiaでは不具合があります．他の機種では未確認です．ごめんなさい．</p>\n<p><a href=\"https://play.google.com/store/apps/details?id=net.taniho.yakudo\">yakudo camera - Google Play の Android アプリ</a></p>\n<p>明日の<a href=\"http://blog.taniho.net/categories/TAC2017/\">taniho Advent Calendar 2017</a>は打って変わって，Discordのbotを作った話をします．</p>\n",
            "tags": [
                "Qt",
                "yakudo",
                "Android"
            ]
        }
    ]
}