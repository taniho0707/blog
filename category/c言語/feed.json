{
    "version": "https://jsonfeed.org/version/1",
    "title": "taniho's blog • All posts by \"c言語\" category",
    "description": "technical note",
    "home_page_url": "http://blog.taniho.net",
    "items": [
        {
            "id": "http://blog.taniho.net/2016/09/%E9%96%A2%E6%95%B0%E3%82%92%E4%BD%9C%E3%82%8B/",
            "url": "http://blog.taniho.net/2016/09/%E9%96%A2%E6%95%B0%E3%82%92%E4%BD%9C%E3%82%8B/",
            "title": "関数を作る",
            "date_published": "2016-09-27T06:52:22.000Z",
            "content_html": "<h1 id=\"この記事の目的\"><a href=\"#この記事の目的\" class=\"headerlink\" title=\"この記事の目的\"></a>この記事の目的</h1><p>この記事は部員向けに書いています．<strong>初めて壁情報を保存しようと頑張っている人</strong>，使いやすい関数を作りたい人，キーの打ち間違えが多くて困っている人は読んでみてください．<br>壁の追加関数を作りながら，関数の作り方を学習していきましょう．</p>\n<p>この記事ではC言語の関数のみを扱います．また，あくまで僕の考えをまとめたものなので，すべての内容が正しいことは保証されません．</p>\n<h1 id=\"関数とは\"><a href=\"#関数とは\" class=\"headerlink\" title=\"関数とは\"></a>関数とは</h1><p>関数とはなんでしょうか？<br>具体的なコードを見てみましょう．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sum</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a+b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n = sum(<span class=\"number\">3</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n\n<p>関数sumは，与えた2つの引数の和を返す関数です．超便利な関数ですよね！<br>「’+’使えばいいじゃん」<br>……なるほど，ではこれはどうでしょうか？</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sum2</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> w=<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i=a; i&lt;=b; ++i)&#123;</span><br><span class=\"line\">    w += i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> w;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n = sum2(<span class=\"number\">3</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">12</span><br></pre></td></tr></table></figure>\n\n<p>関数sum2は，与えた引数a以上b以下の数字の和を返す関数です．なるほどこれは便利だ！</p>\n<p>という感じで，<strong>ある一つの機能を持った小さなプログラム</strong>が関数だと思ってください．</p>\n<h1 id=\"関数を作る\"><a href=\"#関数を作る\" class=\"headerlink\" title=\"関数を作る\"></a>関数を作る</h1><h2 id=\"作る関数を決める\"><a href=\"#作る関数を決める\" class=\"headerlink\" title=\"作る関数を決める\"></a>作る関数を決める</h2><p>では，関数を作ってみることにしましょう．今作りたい機能は，マイクロマウスを走らせながら<strong>迷路(壁)情報を保存し，読み出すことができる</strong>機能だとします．<br>初めにすべきことは，<strong>機能の分割</strong>です．今言った機能はすごく大雑把な表現なので，どのような関数が必要か考えてみましょう．</p>\n<p>壁を何らかの変数(おそらく配列)に格納すると思います．この変数に，任意の1枚の壁を追加する関数が必要そうです．同時に，この変数から任意の1枚の壁が存在するかどうかを調べる関数も必要でしょう．<br>というわけで，まずは1枚の壁を追加する関数を作っていきたいと思います．</p>\n<p>さて，関数を作る時に意識すべきことは，<strong>使いやすい引数を設定する</strong>ことです．<br>壁を追加する時に，どのような命令で壁を指定すると便利でしょうか？</p>\n<p>僕は「壁の面する座標と，壁の存在する方角」を引数にすると便利だと考えました．というわけで，関数のプロトタイプ宣言はこのようにしてみます．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSingleWall</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> dir)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>引数として追加したい壁のx，y座標，壁の存在する方角を取り，<br>返り値は壁の追加に成功した場合0，失敗した場合それ以外の数字を返すようにします．</p>\n<p>そういえば，引数にある <code>int dir</code> は具体的にどうやって指定すればいいのでしょうか？ いまいちわかりにくいので，改良しておきましょう．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">enum</span> <span class=\"title\">Direction</span> &#123;</span></span><br><span class=\"line\">  DIR_NORTH,</span><br><span class=\"line\">  DIR_EAST,</span><br><span class=\"line\">  DIR_SOUTH,</span><br><span class=\"line\">  DIR_WEST</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSingleWall</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">enum</span> Direction dir)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"関数を実装する\"><a href=\"#関数を実装する\" class=\"headerlink\" title=\"関数を実装する\"></a>関数を実装する</h2><p>では，<code>addSingleWall</code>を実装していきましょう！<br>まずはとりあえず実装してみます．<br>(壁情報の持ち方については，**<a href=\"http://hantasmouse.hatenablog.jp/entry/2015/11/10/003711\">旧ブログ記事</a>**を参照してください)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> wall_column[<span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> wall_row[<span class=\"number\">15</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSingleWall</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">enum</span> Direction dir)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(dir)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_NORTH:</span><br><span class=\"line\">\t\twall_row[y] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_EAST:</span><br><span class=\"line\">\t\twall_column[x] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_SOUTH:</span><br><span class=\"line\">\t\twall_row[y<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_WEST:</span><br><span class=\"line\">\t\twall_column[x<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>さて，このプログラムは正しく動作するでしょうか？<br>もちろんお気づきかと思いますが，問題がありますね．引数値として，例えば<code>(0, 0, DIR_WEST)</code>を与えた場合に配列の領域外にアクセスすることになります．もしくは，<code>(-100, 150, DIR_NORTH)</code>などの範囲外を与えた場合にもエラーが返って来ず，恐ろしいことになりそうです．</p>\n<p>今回気をつけなければいけなかったことは，次のようなことです．</p>\n<ul>\n<li>正しい処理をする<br>言うまでもなく，適切な壁を追加してくれないと困ります．</li>\n<li>誤った引数が来ても問題なくする<br>今回の場合，壁が追加できないような引数が来た場合には何もせずにエラーコードを返すべきです．<br>誤った壁を追加したり，配列の領域外にアクセスするといったことは絶対にしないように気をつけます．</li>\n</ul>\n<p>以上を踏まえた上で実装を行いました．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> wall_column[<span class=\"number\">15</span>];</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> wall_row[<span class=\"number\">15</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">isInRange</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> min, <span class=\"keyword\">int</span> max)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x &gt;= min &amp;&amp; x &lt;= max) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSingleWall</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">enum</span> Direction dir)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(dir)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_NORTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall_row[y] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_EAST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall_column[x] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_SOUTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall_row[y<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_WEST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall_column[x<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>壁が存在するかを読み取る関数や，他に必要と思った関数は自分で実装をしてみてください．</p>\n<h1 id=\"関数を拡張する\"><a href=\"#関数を拡張する\" class=\"headerlink\" title=\"関数を拡張する\"></a>関数を拡張する</h1><p>さて，先程作った<code>addSingleWall</code>関数を改良してみましょう．</p>\n<p>壁情報を複数個持ちたい場合があるかもしれません．まずは壁情報である<code>unsigned short wall_column[15]</code>と<code>unsigned short wall_row[15]</code>をまとめて構造体にしておきます．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">WallData</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> column[<span class=\"number\">15</span>],</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> row[<span class=\"number\">15</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>では，安直に次のように実装してみます．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">WallData</span> <span class=\"title\">wd1</span>;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">WallData</span> <span class=\"title\">wd2</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">isInRange</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> min, <span class=\"keyword\">int</span> max)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x &gt;= min &amp;&amp; x &lt;= max) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSingleWall1</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">enum</span> Direction dir)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(dir)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_NORTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd1.row[y] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_EAST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd1.column[x] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_SOUTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd1.row[y<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_WEST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd1.column[x<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSingleWall2</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">enum</span> Direction dir)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(dir)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_NORTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd2.row[y] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_EAST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd2.column[x] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_SOUTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd2.row[y<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_WEST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twd2.column[x<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>……どう考えても冗長なコードです(先日部員がこのようなコードを書いていて驚愕しました)．<br>これでは満足行かないので，<code>addSingleWall</code>の引数を次のように工夫してみます．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSinglewall</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">enum</span> Direction, struct WallData *)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>実装すると次のような感じでしょうか．</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">WallData</span> <span class=\"title\">wd</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">isInRange</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> min, <span class=\"keyword\">int</span> max)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x &gt;= min &amp;&amp; x &lt;= max) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addSingleWall</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">enum</span> Direction dir, struct WallData *wall)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(dir)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_NORTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall-&gt;row[y] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_EAST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">14</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall-&gt;column[x] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_SOUTH:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall-&gt;row[y<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-x));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> DIR_WEST:</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(x, <span class=\"number\">1</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isInRange(y, <span class=\"number\">0</span>, <span class=\"number\">15</span>)) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\twall-&gt;column[x<span class=\"number\">-1</span>] |= (<span class=\"number\">0x1</span> &lt;&lt; (<span class=\"number\">15</span>-y));</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"まとめ\"><a href=\"#まとめ\" class=\"headerlink\" title=\"まとめ\"></a>まとめ</h1><p>関数は使いやすさが第一です．自分の使いやすい関数を作り，楽に開発を進めましょう．<br>機能ごとに関数を分割することでデバッグも楽になるはずです．</p>\n",
            "tags": [
                "マイクロマウス",
                "C言語",
                "入門"
            ]
        }
    ]
}