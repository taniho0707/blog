{
    "version": "https://jsonfeed.org/version/1",
    "title": "taniho's blog",
    "description": "technical note",
    "home_page_url": "http://blog.taniho.net",
    "items": [
        {
            "id": "http://blog.taniho.net/2019/12/STM32%E3%81%A7QuadSPI%E6%8E%A5%E7%B6%9A%E3%81%AEwinbond-NOR-Flash%E3%82%92%E4%BD%BF%E3%81%86/",
            "url": "http://blog.taniho.net/2019/12/STM32%E3%81%A7QuadSPI%E6%8E%A5%E7%B6%9A%E3%81%AEwinbond-NOR-Flash%E3%82%92%E4%BD%BF%E3%81%86/",
            "title": "STM32でQuadSPI接続のwinbond NOR Flashを使う",
            "date_published": "2019-12-19T14:10:38.000Z",
            "content_html": "<h1 id=\"はじめに\"><a href=\"#はじめに\" class=\"headerlink\" title=\"はじめに\"></a>はじめに</h1><p>この記事は<a href=\"https://adventar.org/calendars/3991\">Mice Advent Calendar 2019</a>の20日目の記事です．<br>昨日の記事は<a href=\"https://twitter.com/Solder_disaster\">半田ディザスター</a>さんの<a href=\"\">しろめくんが死んだ話とver2の話</a>の記事でした．<br>～感想～</p>\n<p>さて，今日は新作のトレーサーに搭載したNOR Flashを使うために試行錯誤した話をまとめようと思います．<br>搭載したFlashは<a href=\"https://www.winbond.com/hq/product/code-storage-flash-memory/serial-nor-flash/index.html?__locale=ja&partNo=W25R64JV\">winbond W25R64JV</a>，です(データシートは<a href=\"https://www.digikey.jp/product-detail/ja/winbond-electronics/W25Q64JVSSIM-TR/W25Q64JVSSIMCT-ND/7776729\">Digikey</a>から取れました)．</p>\n<p>この記事では，STM32でのQuadSPIの使い方と，winbond NOR Flashの使い方についてまとめようと思います．</p>\n<a id=\"more\"></a>\n\n<h1 id=\"QuadSPIについて\"><a href=\"#QuadSPIについて\" class=\"headerlink\" title=\"QuadSPIについて\"></a>QuadSPIについて</h1><p>SPI通信では4本の信号線で全二重方式の通信ができます．<br>データラインは上りが1本，下りが1本です．</p>\n<p>QSPI通信では6本の信号線で半二重方式の通信を行います．<br>データラインは，Quad I/O通信時は上りと下り共用で4本です．<br>(これパラレル通信では？ と思うのだけれど詳しい人教えてください)</p>\n<p>端的に言って，同時に4本使ってデータを送れるので，</p>\n<p><strong>速い</strong></p>\n<p>というわけです．<br>今回はこれを使っていきます．</p>\n<p><img src=\"SPI_QSPI.png\" alt=\"SPIとQSPIの信号線\"></p>\n<h1 id=\"STM32-HALでのQuadSPI\"><a href=\"#STM32-HALでのQuadSPI\" class=\"headerlink\" title=\"STM32 HALでのQuadSPI\"></a>STM32 HALでのQuadSPI</h1><h2 id=\"フレームフォーマット\"><a href=\"#フレームフォーマット\" class=\"headerlink\" title=\"フレームフォーマット\"></a>フレームフォーマット</h2><p>STM32では，QSPIのフレームを次のように，Instruction，Address，Alternate，Dummy，Dataという名前を付けて定義しています．<br>図では4線通信をしており，長さも一例ですが，<br>それぞれ1線・2線に変更したり，ある程度の制約の中でクロック数を変えることは出来ます(詳しくは後述)．</p>\n<p><img src=\"FrameFormat.png\" alt=\"QSPIのフレームフォーマット\"></p>\n<h2 id=\"初期設定\"><a href=\"#初期設定\" class=\"headerlink\" title=\"初期設定\"></a>初期設定</h2><h3 id=\"STM32CubeMX\"><a href=\"#STM32CubeMX\" class=\"headerlink\" title=\"STM32CubeMX\"></a>STM32CubeMX</h3><p>STM32CubeMXでコード生成する場合は，QUADSPIを有効にすれば初期化コードが生成されます．</p>\n<p><img src=\"STM32CubeMX.png\" alt=\"STM32CubeMXでのQSPI設定\"></p>\n<p>General Parametersの説明は次章で行うため省略します．</p>\n<h3 id=\"HAL\"><a href=\"#HAL\" class=\"headerlink\" title=\"HAL\"></a>HAL</h3><p>HALのAPIを直接叩いて設定する方法です．<br>ざっくりと，以下のようなコードで初期設定を行います．</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__HAL_RCC_QSPI_CLK_ENABLE();</span><br><span class=\"line\">__HAL_RCC_GPIOE_CLK_ENABLE();</span><br><span class=\"line\"></span><br><span class=\"line\">QSPI_HandleTypeDef hqspi;</span><br><span class=\"line\">hqspi.Instance = QUADSPI;</span><br><span class=\"line\">hqspi.Init.ClockPrescaler = <span class=\"number\">2</span>;</span><br><span class=\"line\">hqspi.Init.FifoThreshold = <span class=\"number\">4</span>;</span><br><span class=\"line\">hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_NONE;</span><br><span class=\"line\">hqspi.Init.FlashSize = <span class=\"number\">22</span>;</span><br><span class=\"line\">hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;</span><br><span class=\"line\">hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;</span><br><span class=\"line\">hqspi.Init.FlashID = QSPI_FLASH_ID_1;</span><br><span class=\"line\">hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;</span><br><span class=\"line\">HAL_QSPI_Init(&amp;hqspi);</span><br><span class=\"line\"></span><br><span class=\"line\">GPIO_InitTypeDef GPIO_InitStruct;</span><br><span class=\"line\">GPIO_InitStruct.Pin = GPIO_PIN_2;</span><br><span class=\"line\">GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;</span><br><span class=\"line\">GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class=\"line\">GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;</span><br><span class=\"line\">GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;</span><br><span class=\"line\">HAL_GPIO_Init(GPIOE, &amp;GPIO_InitStruct);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 同様に全ピンの設定を行う</span></span><br></pre></td></tr></table></figure>\n\n<p><code>QSPI_InitTypeDef</code> は下記の通りです．</p>\n<p><img src=\"QSPI_InitTypeDef.png\" alt=\"QSPI_InitTypeDef\"></p>\n<h2 id=\"Indirect-Mode\"><a href=\"#Indirect-Mode\" class=\"headerlink\" title=\"Indirect Mode\"></a>Indirect Mode</h2><p>Indirect Modeは全てのコマンドを実行できるモードです．<br>Instruction，Address，Alternate，Dummy，それぞれの設定を <code>QSPI_CommandTypeDef</code> を使って設定を行い，その後Dataを送受信します．<br>設定漏れがあると正しく動かないので下記表を参考にして適切に設定していきます．</p>\n<p><img src=\"QSPI_CommandTypeDef.png\" alt=\"QSPI_CommandTypeDef\"></p>\n<h2 id=\"Auto-Polling-Mode\"><a href=\"#Auto-Polling-Mode\" class=\"headerlink\" title=\"Auto Polling Mode\"></a>Auto Polling Mode</h2><p>Auto Polling Modeは，主にステータスレジスタを監視して書き込み完了をポーリングするために使うモードです．</p>\n<h1 id=\"NOR-Flashの使い方\"><a href=\"#NOR-Flashの使い方\" class=\"headerlink\" title=\"NOR Flashの使い方\"></a>NOR Flashの使い方</h1><h2 id=\"接続\"><a href=\"#接続\" class=\"headerlink\" title=\"接続\"></a>接続</h2><p>接続はいたって簡単です．</p>\n<p><img src=\"Circuit.png\" alt=\"配線図\"></p>\n<h2 id=\"IDの読み出し-1線\"><a href=\"#IDの読み出し-1線\" class=\"headerlink\" title=\"IDの読み出し(1線)\"></a>IDの読み出し(1線)</h2><p>今回使用したW25Q64JVSSIMのManufacturer IDとDevice IDは下記の通りです．</p>\n<table>\n<thead>\n<tr>\n<th>Manufacturer ID</th>\n<th>Device ID</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>EFh</td>\n<td>16h</td>\n</tr>\n</tbody></table>\n<p>まずはこのIDを読み出すことでデバイスとの接続を確認します．<br>下記のコマンドを実行することでIDを読み出せます．</p>\n<p><img src=\"ReadManufacturerDeviceID.png\" alt=\"IDの読み出し\"></p>\n<p>上記のデータを送信するコードです．</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QSPI_CommandTypeDef qspi_typedef;</span><br><span class=\"line\">qspi_typedef.Instruction = <span class=\"number\">0x90</span>;</span><br><span class=\"line\">qspi_typedef.InstructionMode = QSPI_INSTRUCTION_1_LINE;</span><br><span class=\"line\">qspi_typedef.Address = <span class=\"number\">0x000000</span>;</span><br><span class=\"line\">qspi_typedef.AddressSize = QSPI_ADDRESS_24_BITS;</span><br><span class=\"line\">qspi_typedef.AddressMode = QSPI_ADDRESS_NONE;</span><br><span class=\"line\">qspi_typedef.AlternateBytes = <span class=\"number\">0x00</span>;</span><br><span class=\"line\">qspi_typedef.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;</span><br><span class=\"line\">qspi_typedef.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;</span><br><span class=\"line\">qspi_typedef.DummyCycles = <span class=\"number\">0</span>;</span><br><span class=\"line\">qspi_typedef.NbData = <span class=\"number\">2</span>;</span><br><span class=\"line\">qspi_typedef.DataMode = QSPI_DATA_1_LINE;</span><br><span class=\"line\">qspi_typedef.DdrMode = QSPI_DDR_MODE_DISABLE;</span><br><span class=\"line\">qspi_typedef.DdrHoldHalfCycle = QSPI_DDR_HHC_ANALOG_DELAY;</span><br><span class=\"line\">qspi_typedef.SIOOMode = QSPI_SIOO_INST_EVERY_CMD;</span><br><span class=\"line\">HAL_QSPI_Command(&amp;hqspi, &amp;qspi_typedef, <span class=\"number\">1000</span>);</span><br><span class=\"line\"><span class=\"keyword\">uint8_t</span> qdata[<span class=\"number\">2</span>];</span><br><span class=\"line\">HAL_QSPI_Receive(&amp;hqspi, qdata, <span class=\"number\">1000</span>);</span><br><span class=\"line\"><span class=\"comment\">// qdata[0] = 0xEF;</span></span><br><span class=\"line\"><span class=\"comment\">// qdata[1] = 0x16;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"QSPIの許可\"><a href=\"#QSPIの許可\" class=\"headerlink\" title=\"QSPIの許可\"></a>QSPIの許可</h2><p>FlashのWrite Status Register-2 (31h)でステータスレジスタ2のQuad Enableを1にすることで4線通信が有効化されます(初期値0)．<br>このビットは不揮発ビットのため，一度設定してしまえば電源を切断しても再設定不要です．</p>\n<p>下記のコマンドで許可を行うことが出来ます．</p>\n<p><img src=\"WriteStatusRegister2.png\" alt=\"QSPIの許可\"></p>\n<p>上記のデータを送信するコードです．</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">QSPI_CommandTypeDef qspi_typedef;</span><br><span class=\"line\">qspi_typedef.Instruction = <span class=\"number\">0x31</span>;</span><br><span class=\"line\">qspi_typedef.InstructionMode = QSPI_INSTRUCTION_1_LINE;</span><br><span class=\"line\">qspi_typedef.Address = <span class=\"number\">0x0</span>;</span><br><span class=\"line\">qspi_typedef.AddressSize = QSPI_ADDRESS_24_BITS;</span><br><span class=\"line\">qspi_typedef.AddressMode = QSPI_ADDRESS_NONE;</span><br><span class=\"line\">qspi_typedef.AlternateBytes = <span class=\"number\">0x00</span>;</span><br><span class=\"line\">qspi_typedef.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;</span><br><span class=\"line\">qspi_typedef.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;</span><br><span class=\"line\">qspi_typedef.DummyCycles = <span class=\"number\">0</span>;</span><br><span class=\"line\">qspi_typedef.NbData = <span class=\"number\">1</span>;</span><br><span class=\"line\">qspi_typedef.DataMode = QSPI_DATA_1_LINE;</span><br><span class=\"line\">qspi_typedef.DdrMode = QSPI_DDR_MODE_DISABLE;</span><br><span class=\"line\">qspi_typedef.DdrHoldHalfCycle = QSPI_DDR_HHC_ANALOG_DELAY;</span><br><span class=\"line\">qspi_typedef.SIOOMode = QSPI_SIOO_INST_EVERY_CMD;</span><br><span class=\"line\">HAL_QSPI_Command(&amp;hqspi, &amp;qspi_typedef, <span class=\"number\">1000</span>);</span><br><span class=\"line\"><span class=\"keyword\">uint8_t</span> data = <span class=\"number\">0x02</span>;</span><br><span class=\"line\">HAL_QSPI_Transmit(&amp;hqspi, &amp;data, <span class=\"number\">1000</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"データの消去\"><a href=\"#データの消去\" class=\"headerlink\" title=\"データの消去\"></a>データの消去</h2><p>データの消去には4種類の方法があります．</p>\n<ul>\n<li>Sector Erase：1セクター(4KB)毎にデータを消去します．これが消去できる最小単位です．</li>\n<li>32KB Block Erase：(このチップは1Block=64KBなのですが，何故32KB消去のコマンドがあるのでしょうか……)</li>\n<li>64KB Block Erase：1ブロック(64KB)毎にデータを消去します．</li>\n<li>Chip Erase：チップ全てを消去します．</li>\n</ul>\n<p>消去を行ったビットは全て1となり，データの書き込みを行えるようになります．</p>\n<p>データの消去には多少の時間がかかるため，ステータスレジスタを確認して消去の完了を待機する必要があります．</p>\n<p>データの消去前には<code>GlobalBlockUnlock</code>などのアンロックコマンドを実行してから行う必要があります．</p>\n<p>また，データの消去を行う前には，毎回<code>Write Enable</code>を実行する必要があります．</p>\n<h2 id=\"データの書き込み\"><a href=\"#データの書き込み\" class=\"headerlink\" title=\"データの書き込み\"></a>データの書き込み</h2><p>データの書き込み(Program)は基本的に256Byte単位で行います．</p>\n<p>データの書き込み前にはGlobal Block Unlockなどのアンロックコマンドを実行してから行う必要があります．</p>\n<p>また，データの書き込みを行う前には，毎回<code>Write Enable</code>を実行する必要があります．</p>\n<h2 id=\"データの読み出し\"><a href=\"#データの読み出し\" class=\"headerlink\" title=\"データの読み出し\"></a>データの読み出し</h2><p>データの読み出しはいくつかの種類があります．</p>\n<ul>\n<li>Read Data</li>\n<li>Fast Read</li>\n<li>DTR Fast Read</li>\n<li>Fast Read Dual Output</li>\n<li>Fast Read Quad Output</li>\n<li>Fast Read Dual I/O</li>\n<li>DTR Fast Read Dual I/O</li>\n<li>Fast Read Quad I/O</li>\n<li>DTR Fast Read Quad I/O</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>設定</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>DTR</td>\n<td>DDRと同義，CLKの立ち上がりと立ち下がりの両方でデータをラッチする</td>\n</tr>\n<tr>\n<td>Fast</td>\n<td>アドレスを指定した後にダミークロックを送る必要がある代わりに，クロックの速度を上げることが出来る</td>\n</tr>\n<tr>\n<td>Output</td>\n<td>データのみが2/4線となる</td>\n</tr>\n<tr>\n<td>I/O</td>\n<td>アドレスとデータが2/4線となる</td>\n</tr>\n</tbody></table>\n<p>一例として，Fast Read Quad I/Oのコマンドとコードを示します．</p>\n<p><img src=\"FastReadQuad.png\" alt=\"Fast Read Quad I/O\"></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FastReadQuad</span><span class=\"params\">(<span class=\"keyword\">uint32_t</span> addr, <span class=\"keyword\">uint8_t</span>* data, <span class=\"keyword\">size_t</span> num)</span> </span>&#123;</span><br><span class=\"line\">    QSPI_CommandTypeDef qspi_typedef;</span><br><span class=\"line\">    qspi_typedef.Instruction = <span class=\"number\">0x6B</span>;</span><br><span class=\"line\">    qspi_typedef.InstructionMode = QSPI_INSTRUCTION_1_LINE;</span><br><span class=\"line\">    qspi_typedef.Address = addr;</span><br><span class=\"line\">    qspi_typedef.AddressSize = QSPI_ADDRESS_24_BITS;</span><br><span class=\"line\">    qspi_typedef.AddressMode = QSPI_ADDRESS_1_LINE;</span><br><span class=\"line\">    qspi_typedef.AlternateBytes = <span class=\"number\">0x00</span>;</span><br><span class=\"line\">    qspi_typedef.AlternateBytesSize = QSPI_ALTERNATE_BYTES_8_BITS;</span><br><span class=\"line\">    qspi_typedef.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;</span><br><span class=\"line\">    qspi_typedef.DummyCycles = <span class=\"number\">8</span>;</span><br><span class=\"line\">    qspi_typedef.NbData = num;</span><br><span class=\"line\">    qspi_typedef.DataMode = QSPI_DATA_4_LINES;</span><br><span class=\"line\">    qspi_typedef.DdrMode = QSPI_DDR_MODE_DISABLE;</span><br><span class=\"line\">    qspi_typedef.DdrHoldHalfCycle = QSPI_DDR_HHC_ANALOG_DELAY;</span><br><span class=\"line\">    qspi_typedef.SIOOMode = QSPI_SIOO_INST_EVERY_CMD;</span><br><span class=\"line\">    HAL_QSPI_Command(&amp;port, &amp;qspi_typedef, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    HAL_QSPI_Receive(&amp;port, data, <span class=\"number\">1000</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"おわりに\"><a href=\"#おわりに\" class=\"headerlink\" title=\"おわりに\"></a>おわりに</h1><p>QSPI，およびwinbondのNOR Flashを使うための情報をまとめました．<br>Flashは扱いが大変ですが，その中でもNOR Flashは扱いやすいタイプのメモリなので，積極的に使っていきたいと思います．</p>\n<p>明日は<a href=\"https://twitter.com/VrIyoe\">makoto</a>さんの今年の反省と来年の話です．<br>～感想～</p>\n",
            "tags": []
        }
    ]
}