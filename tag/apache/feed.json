{
    "version": "https://jsonfeed.org/version/1",
    "title": "taniho's blog • All posts by \"apache\" tag",
    "description": "technical note",
    "home_page_url": "http://blog.taniho.net",
    "items": [
        {
            "id": "http://blog.taniho.net/2016/05/Apache%E3%81%A7letsencrypt%E3%82%92%E4%BD%BF%E3%81%86/",
            "url": "http://blog.taniho.net/2016/05/Apache%E3%81%A7letsencrypt%E3%82%92%E4%BD%BF%E3%81%86/",
            "title": "Apacheでletsencryptを使う",
            "date_published": "2016-05-04T06:36:06.000Z",
            "content_html": "<h1 id=\"Let’s-Encryptとは\"><a href=\"#Let’s-Encryptとは\" class=\"headerlink\" title=\"Let’s Encryptとは\"></a>Let’s Encryptとは</h1><p><a href=\"https://letsencrypt.org/\">Let’s Encrypt</a>は無料で使えるSSL認証局です．<br>Let’s Encryptで証明書を取得し，Apacheで動作させるまでの方法を書き残しておきます．</p>\n<p>動作環境は，</p>\n<ul>\n<li>Ubuntu 12.04</li>\n<li>Apache 2.4.12</li>\n</ul>\n<h1 id=\"証明書の取得\"><a href=\"#証明書の取得\" class=\"headerlink\" title=\"証明書の取得\"></a>証明書の取得</h1><h2 id=\"クライアントの導入\"><a href=\"#クライアントの導入\" class=\"headerlink\" title=\"クライアントの導入\"></a>クライアントの導入</h2><p>githubからクライアントを持ってきて，依存関係の確認などを行います．<br>3行目でヘルプを確認していますが，このときに依存関係の確認・更新などを行うようです．</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/letsencrypt/letsencrypt</span><br><span class=\"line\"><span class=\"built_in\">cd</span> letsencrypt</span><br><span class=\"line\">sudo ./letsencrypt-auto --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"証明書の取得-1\"><a href=\"#証明書の取得-1\" class=\"headerlink\" title=\"証明書の取得\"></a>証明書の取得</h2><p>今回，証明書はサブドメインごとに取得します．<br>なお，80番ポートを使うので動作中のApacheは停止しておきます．</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 stop</span><br><span class=\"line\">./letsencrypt-auto certonly --standalone -d www.taniho.net</span><br><span class=\"line\">./letsencrypt-auto certonly --standalone -d blog.taniho.net</span><br></pre></td></tr></table></figure>\n<p>初回はメールアドレスなどを入力させるダイアログが出てくるので，いい感じに入力していきます．</p>\n<blockquote>\n<p>IMPORTANT NOTES:</p>\n<ul>\n<li>Congratulations! Your certificate and chain have been saved at<br>/etc/letsencrypt/live/(ドメイン)/fullchain.pem. Your<br>cert will expire on (有効期限). To obtain a new version of the<br>certificate in the future, simply run Let’s Encrypt again.</li>\n</ul>\n</blockquote>\n<p>この画面が出れば取得完了です．<br>見れば解ると思いますが，Let’s Encryptで取得した証明書は有効期限が90日しかありません．<br>証明書の更新は次のコマンドを打つことで行えます．<br>また，更新後にApacheを再起動する必要があります．</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">letsencrypt-auto renew --force-renew</span><br></pre></td></tr></table></figure>\n\n<p>今回取得した証明書は，/etc/letsencrypt/live/(ドメイン)/の中に入っています．</p>\n<h1 id=\"Apacheの設定\"><a href=\"#Apacheの設定\" class=\"headerlink\" title=\"Apacheの設定\"></a>Apacheの設定</h1><h2 id=\"とりあえず\"><a href=\"#とりあえず\" class=\"headerlink\" title=\"とりあえず\"></a>とりあえず</h2><p>Apache2.4.8以降では，それ以前と設定の仕方が変わっているので気をつけてください．<br>とりあえず，<a href=\"https://blog.taniho.net/%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%A6%E3%81%BF%E3%81%BE%E3%81%99%EF%BC%8E\">https://blog.taniho.net/にアクセスできるように設定してみます．</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:443&gt; </span><br><span class=\"line\">\tServerName www.hoge.net</span><br><span class=\"line\">\tDocumentRoot &#x2F;var&#x2F;www&#x2F;html</span><br><span class=\"line\"></span><br><span class=\"line\">\tErrorLog $&#123;APACHE_LOG_DIR&#125;&#x2F;error.log</span><br><span class=\"line\">\tCustomLog $&#123;APACHE_LOG_DIR&#125;&#x2F;access.log combined</span><br><span class=\"line\"></span><br><span class=\"line\">\tSSLEngine on</span><br><span class=\"line\">\tSSLCertificateFile &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;blog.taniho.net&#x2F;fullchain.pem</span><br><span class=\"line\">\tSSLCertificateKeyFile &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;blog.taniho.net&#x2F;privkey.pem</span><br><span class=\"line\">&lt;&#x2F;VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"設定を有効化する\"><a href=\"#設定を有効化する\" class=\"headerlink\" title=\"設定を有効化する\"></a>設定を有効化する</h2><p>/etc/apache2/site-availableにsite設定を書いたら，次のコマンドで有効化，無効化することができます．</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a2ensite (設定ファイル名)</span><br><span class=\"line\">a2dissite (設定ファイル名)</span><br></pre></td></tr></table></figure>\n<p>同様に，Apacheのモジュールを有効化・無効化させる場合は次のコマンドを使います．</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a2enmod (モジュール名)</span><br><span class=\"line\">a2dismod (モジュール名)</span><br></pre></td></tr></table></figure>\n<p>今回はmod_sslを有効化する必要があるので，次のコマンドを叩いておきます．</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a2enmod ssl</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"httpに来たアクセスをhttpsにリダイレクトさせる\"><a href=\"#httpに来たアクセスをhttpsにリダイレクトさせる\" class=\"headerlink\" title=\"httpに来たアクセスをhttpsにリダイレクトさせる\"></a>httpに来たアクセスをhttpsにリダイレクトさせる</h2><p>必ずhttpsでアクセスさせたい場合や，その逆の場合もあると思います．<br>ひとまず，<a href=\"http://blog.taniho.net/%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%95%E3%82%8C%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%ABhttps%E3%81%AB%E8%BB%A2%E9%80%81%E3%81%99%E3%82%8B%E8%A8%AD%E5%AE%9A%E3%82%92%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%BE%E3%81%99%EF%BC%8E\">http://blog.taniho.net/にアクセスされた場合にhttpsに転送する設定をまとめておきます．</a><br>VirtualHost設定の中に次の内容を書きます．</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RewriteEngine On</span><br><span class=\"line\">RewriteCond %&#123;HTTPS&#125; off</span><br><span class=\"line\">RewriteRule ^(.*) https:&#x2F;&#x2F;blog.taniho.net$1 [R,L]</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://weblabo.oscasierra.net/letsencrypt-2/\">CentOS 7 + Apache 2.4 で Let’s Encrypt の証明書を導入する手順</a><br><a href=\"https://blog.apar.jp/linux/3619/\">Let’s Encrypt サーバー証明書の取得と自動更新設定メモ</a><br><a href=\"http://qiita.com/sue71/items/100004b704b9ff129b09\">apacheでhttpへのアクセスをhttpsへ自動リダイレクトする</a></p>\n",
            "tags": [
                "Apache",
                "letsencrypt"
            ]
        }
    ]
}