<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://blog.taniho.net</id>
    <title>taniho&#39;s blog • Posts by &#34;rx62t&#34; tag</title>
    <link href="http://blog.taniho.net" />
    <updated>2016-04-21T02:36:31.000Z</updated>
    <category term="Emacs" />
    <category term="ArchLinux" />
    <category term="マイクロマウス" />
    <category term="台湾" />
    <category term="旅行" />
    <category term="たまこまーけっと" />
    <category term="2016年" />
    <category term="買い物" />
    <category term="おすすめ" />
    <category term="日常" />
    <category term="2017年" />
    <category term="クリスマス" />
    <category term="Elecrow" />
    <category term="電子工作" />
    <category term="関西地区大会" />
    <category term="猫" />
    <category term="Apache" />
    <category term="letsencrypt" />
    <category term="Blu-ray" />
    <category term="VLC" />
    <category term="CNC" />
    <category term="Magit" />
    <category term="git" />
    <category term="MFT" />
    <category term="RaspberryPi" />
    <category term="無線LAN" />
    <category term="Mice" />
    <category term="鵤" />
    <category term="メジロ" />
    <category term="Qt" />
    <category term="デレステ" />
    <category term="yakudo" />
    <category term="Android" />
    <category term="Discord" />
    <category term="Webアプリ" />
    <category term="教習所" />
    <category term="ロボット" />
    <category term="Linux" />
    <category term="remark" />
    <category term="スライドショー" />
    <category term="ごはん" />
    <category term="金町" />
    <category term="クレジットカード" />
    <category term="ヘボコン" />
    <category term="ボードゲーム" />
    <category term="Quadcept" />
    <category term="CAD" />
    <category term="Doxygen" />
    <category term="2018年" />
    <category term="dアニメストア" />
    <category term="Renesas" />
    <category term="RX62T" />
    <category term="e2studio" />
    <category term="github" />
    <category term="マウス" />
    <category term="分解" />
    <category term="logicool" />
    <category term="M570" />
    <category term="G700s" />
    <category term="seccamp2016" />
    <category term="seccamp" />
    <category term="ownCloud" />
    <category term="サーバー" />
    <category term="subsonic" />
    <category term="音楽" />
    <category term="みそ煮込みうどん" />
    <category term="I.Sys" />
    <category term="フラッグLED" />
    <category term="i3" />
    <category term="wm" />
    <category term="AdventCalendar" />
    <category term="モード" />
    <category term="迷路" />
    <category term="C++" />
    <category term="調整" />
    <category term="中華" />
    <category term="まとめ" />
    <category term="助けて" />
    <category term="三角関数" />
    <category term="福岡" />
    <category term="東北地区大会" />
    <category term="STL" />
    <category term="入門" />
    <category term="ラズパイコンテスト" />
    <category term="NFC" />
    <category term="C言語" />
    <category term="部品" />
    <category term="管理" />
    <category term="電子部品" />
    <category term="STM32CubeMX" />
    <category term="FTDI" />
    <category term="Makefile" />
    <category term="アプリ" />
    <category term="はてな" />
    <category term="インターン" />
    <category term="最高" />
    <category term="セキュリティ・キャンプ" />
    <category term="ADHD" />
    <category term="結婚" />
    <entry>
        <id>http://blog.taniho.net/2016/04/e2studio%E3%82%92%E7%94%A8%E3%81%84%E3%81%A6GCC-C-%E3%81%A7%E9%96%8B%E7%99%BA%E3%81%99%E3%82%8B/</id>
        <title>e2studioを用いてGCC(C++)で開発する</title>
        <link rel="alternate" href="http://blog.taniho.net/2016/04/e2studio%E3%82%92%E7%94%A8%E3%81%84%E3%81%A6GCC-C-%E3%81%A7%E9%96%8B%E7%99%BA%E3%81%99%E3%82%8B/"/>
        <content type="html">&lt;h1 id=&#34;目的&#34;&gt;&lt;a href=&#34;#目的&#34; class=&#34;headerlink&#34; title=&#34;目的&#34;&gt;&lt;/a&gt;目的&lt;/h1&gt;&lt;p&gt;ルネサスが提供しているRX用C++コンパイラはなかなかに使えないので，お手軽にC++11を使える方法を考えます。&lt;br&gt;ルネサスが公式サポートしている，&lt;a href=&#34;http://www.kpitgnutools.com/&#34;&gt;KPIT GNU Tools&lt;/a&gt;を&lt;a href=&#34;http://japan.renesas.com/products/tools/ide/e2studio/&#34;&gt;e2studio&lt;/a&gt;で使えるようにします。&lt;/p&gt;
&lt;h1 id=&#34;環境を整える&#34;&gt;&lt;a href=&#34;#環境を整える&#34; class=&#34;headerlink&#34; title=&#34;環境を整える&#34;&gt;&lt;/a&gt;環境を整える&lt;/h1&gt;&lt;h2 id=&#34;KPIT-GNU-Toolsの入手&#34;&gt;&lt;a href=&#34;#KPIT-GNU-Toolsの入手&#34; class=&#34;headerlink&#34; title=&#34;KPIT GNU Toolsの入手&#34;&gt;&lt;/a&gt;KPIT GNU Toolsの入手&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;http://www.kpitgnutools.com/&#34;&gt;KPIT GNU Tools&lt;/a&gt;公式サイトでユーザー登録を行う必要があります。&lt;br&gt;パスワードの発行に少し時間がかかる可能性があるので，予め済ませておきましょう。&lt;/p&gt;
&lt;p&gt;ログインして，使うマイコンのコンパイラ(今回の場合&lt;del&gt;GNURX v12.xx Windows Tool Chain (ELF)&lt;/del&gt;)をダウンロード，インストールします。&lt;br&gt;&lt;strong&gt;※4/26追記&lt;/strong&gt; バージョン違いだったようです。最新版をインストールしてください。&lt;/p&gt;
&lt;h2 id=&#34;e2studioの入手&#34;&gt;&lt;a href=&#34;#e2studioの入手&#34; class=&#34;headerlink&#34; title=&#34;e2studioの入手&#34;&gt;&lt;/a&gt;e2studioの入手&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;http://japan.renesas.com/products/tools/ide/e2studio/&#34;&gt;e2studio&lt;/a&gt;をダウンロード，インストールしておきます。&lt;br&gt;KPIT GNU Toolsがインストール済みであれば，初めての起動の際に何か聞かれるので，Toolchainを登録しておきましょう。&lt;/p&gt;
&lt;h2 id=&#34;プロジェクトの作り方&#34;&gt;&lt;a href=&#34;#プロジェクトの作り方&#34; class=&#34;headerlink&#34; title=&#34;プロジェクトの作り方&#34;&gt;&lt;/a&gt;プロジェクトの作り方&lt;/h2&gt;&lt;p&gt;e2studioの使い方は省略します。&lt;br&gt;基本的にはルネサス公式のコンパイラを使う場合と同じように，新規C++プロジェクトを作成します。&lt;br&gt;ただし，利用するツールチェインを”KPIT GNURX-ELF Toolchain”にします。&lt;br&gt;その他はいい感じに設定を進めていきます。&lt;/p&gt;
&lt;h2 id=&#34;C-11を使えるようにする&#34;&gt;&lt;a href=&#34;#C-11を使えるようにする&#34; class=&#34;headerlink&#34; title=&#34;C++11を使えるようにする&#34;&gt;&lt;/a&gt;C++11を使えるようにする&lt;/h2&gt;&lt;p&gt;このままではC++98のままなので，C++11を使えるように設定しておきます。&lt;/p&gt;
&lt;p&gt;メニューバーの「プロジェクト」-&amp;gt;「プロパティ」を開き，&lt;br&gt;「C/C++ビルド」-&amp;gt;「設定」を選びます。&lt;br&gt;「ツール設定」の中の「Compiler」-&amp;gt;「その他」の画面で，&lt;br&gt;ユーザー定義オプションに”-std=c++11”を追加しておきましょう。&lt;br&gt;これでC++11が使えるようになります。&lt;/p&gt;
&lt;p&gt;余談ですが，KPIT GNU ToolsはまだC++14に対応していないようです。&lt;/p&gt;
&lt;h1 id=&#34;動かしてみて&#34;&gt;&lt;a href=&#34;#動かしてみて&#34; class=&#34;headerlink&#34; title=&#34;動かしてみて&#34;&gt;&lt;/a&gt;動かしてみて&lt;/h1&gt;&lt;h2 id=&#34;動いた&#34;&gt;&lt;a href=&#34;#動いた&#34; class=&#34;headerlink&#34; title=&#34;動いた&#34;&gt;&lt;/a&gt;動いた&lt;/h2&gt;&lt;p&gt;時間が無く十分な検証ができていませんが，次のコードが正しく動作しました。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;quot;iodefine.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;, 1&amp;gt; a = &amp;#123;&lt;span class=&#34;number&#34;&gt;123&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(a.at(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) == &lt;span class=&#34;number&#34;&gt;123&lt;/span&gt;) (LED点灯);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;わからん&#34;&gt;&lt;a href=&#34;#わからん&#34; class=&#34;headerlink&#34; title=&#34;わからん&#34;&gt;&lt;/a&gt;わからん&lt;/h2&gt;&lt;p&gt;ビルドは通るし，プログラムも動作しているようですが，なぜか”-std=c++11フラグをつけるのならrx-elf-g++を使えよ！”という警告が出ます。&lt;br&gt;確かにrx-elf-gccで動かしているので，そりゃそうだと思ってコマンドをrx-elf-g++に変更するとコンパイルができなくなりました。&lt;/p&gt;
&lt;p&gt;また，コンパイルは通っているのにe2studioのシンタックスチェックでシンボルが見つからないよ！ というエラー表示が出てしまいます。&lt;br&gt;とりあえず動いているので問題はなさそうですが，うーん……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;※4/26追記&lt;/strong&gt; シンタックスチェックを無効化すればいいとの意見をいただきました。&lt;br&gt;参考に設定方法を掲載しておきます。&lt;br&gt;Window&amp;gt;設定&amp;gt;C&amp;gt;コード解析 「シンボルが解決されません」「メソッドが解決されません」のチェックを外す&lt;/p&gt;
&lt;h1 id=&#34;C-C-11を始めよう&#34;&gt;&lt;a href=&#34;#C-C-11を始めよう&#34; class=&#34;headerlink&#34; title=&#34;C++/C++11を始めよう&#34;&gt;&lt;/a&gt;C++/C++11を始めよう&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;本を読んでください&lt;/strong&gt;&lt;br&gt;としか言わないのは悲しいので，Miceでも使ってもらえそうな(とっつきの良さそうな)C++の新機能をリストアップします。&lt;br&gt;毎度のごとく，自分で詳しく調べなおしてください。&lt;/p&gt;
&lt;h2 id=&#34;C-03&#34;&gt;&lt;a href=&#34;#C-03&#34; class=&#34;headerlink&#34; title=&#34;C++03&#34;&gt;&lt;/a&gt;C++03&lt;/h2&gt;&lt;h3 id=&#34;変数の定義位置&#34;&gt;&lt;a href=&#34;#変数の定義位置&#34; class=&#34;headerlink&#34; title=&#34;変数の定義位置&#34;&gt;&lt;/a&gt;変数の定義位置&lt;/h3&gt;&lt;p&gt;C言語でははじめに変数宣言をする必要がありましたが，C++では好きなところで変数宣言ができます。&lt;br&gt;すごく便利なのが次のコード&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;; ++i) hoge();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;namespace&#34;&gt;&lt;a href=&#34;#namespace&#34; class=&#34;headerlink&#34; title=&#34;namespace&#34;&gt;&lt;/a&gt;namespace&lt;/h3&gt;&lt;p&gt;名前空間が使えます。&lt;br&gt;別の名前空間に属していれば，名前の重複が起こりません。&lt;br&gt;モジュールごとに名前空間を分けるようにすれば，命名力不足に悩まされる心配もありません。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; A&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hoge = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; B&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hoge = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; hoge &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// hogeは存在しない&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; A::hoge &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; B::hoge &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; A;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;::&lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; hoge &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;vector&#34;&gt;&lt;a href=&#34;#vector&#34; class=&#34;headerlink&#34; title=&#34;vector&#34;&gt;&lt;/a&gt;vector&lt;/h3&gt;&lt;p&gt;可変長配列です。&lt;br&gt;つまり配列の長さを自由に伸び縮みさせられる配列です。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;&amp;gt; hoge = &amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  hoge.at(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  hoge.push_back(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  hoge.at(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;pair&#34;&gt;&lt;a href=&#34;#pair&#34; class=&#34;headerlink&#34; title=&#34;pair&#34;&gt;&lt;/a&gt;pair&lt;/h3&gt;&lt;p&gt;これまでいちいち構造体で作っていたpairが標準で用意されるようになりました。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;utility&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pair&amp;lt;int, int&amp;gt; p1(10, 20);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  p1.first + p1.second; &lt;span class=&#34;comment&#34;&gt;// 30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  pair&amp;lt;float, const char*&amp;gt; p2(1.3f, &amp;quot;abc&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;C-11&#34;&gt;&lt;a href=&#34;#C-11&#34; class=&#34;headerlink&#34; title=&#34;C++11&#34;&gt;&lt;/a&gt;C++11&lt;/h2&gt;&lt;h3 id=&#34;auto&#34;&gt;&lt;a href=&#34;#auto&#34; class=&#34;headerlink&#34; title=&#34;auto&#34;&gt;&lt;/a&gt;auto&lt;/h3&gt;&lt;p&gt;自動型推論と呼ばれる機能です。&lt;br&gt;要するに型を”auto”としておけば自動でいい感じにしてくれます。&lt;/p&gt;
&lt;p&gt;C流&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; t)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Value: %d\n&amp;quot;&lt;/span&gt;, t);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; (*f)(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;) = &amp;amp;func;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	f(&lt;span class=&#34;number&#34;&gt;123&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;C++11流&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; t)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Value: &amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; t &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; f = &amp;amp;func;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	f(&lt;span class=&#34;number&#34;&gt;123&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;array&#34;&gt;&lt;a href=&#34;#array&#34; class=&#34;headerlink&#34; title=&#34;array&#34;&gt;&lt;/a&gt;array&lt;/h3&gt;&lt;p&gt;より安全に使える配列です。&lt;br&gt;あわせて，下のサンプルではrange-based forという技も使っています。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;meta-string&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;array&lt;/span&gt;&amp;lt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;, 10&amp;gt; a = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; ite = a.begin(); ite != a.end(); ++ite)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    *ite = j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;auto&lt;/span&gt; i: a)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=&#34;built_in&#34;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;enum-class&#34;&gt;&lt;a href=&#34;#enum-class&#34; class=&#34;headerlink&#34; title=&#34;enum class&#34;&gt;&lt;/a&gt;enum class&lt;/h3&gt;&lt;p&gt;C言語にも列挙型がありましたが，C++11で使い勝手が良くなりました。&lt;br&gt;列挙型のサイズを規定でき，スコープ演算子でアクセスするようになります。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;N&lt;/span&gt; :&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  N1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  N2 = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  N3,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  N4,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  N1; &lt;span class=&#34;comment&#34;&gt;// 存在しない&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  N::N1; &lt;span class=&#34;comment&#34;&gt;// 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  N::N4; &lt;span class=&#34;comment&#34;&gt;// 102&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&#34;最後に&#34;&gt;&lt;a href=&#34;#最後に&#34; class=&#34;headerlink&#34; title=&#34;最後に&#34;&gt;&lt;/a&gt;最後に&lt;/h1&gt;&lt;p&gt;これだけでも十分便利そうなC++ですが，C++の底力はこんなもんじゃあないので，頑張って勉強していきたいところです。&lt;/p&gt;
</content>
        <category term="Renesas" />
        <category term="RX62T" />
        <category term="e2studio" />
        <updated>2016-04-21T02:36:31.000Z</updated>
    </entry>
</feed>
